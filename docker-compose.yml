version: '3'
services:
  bot:
    container_name: bot
    image: bot_image
    restart: always
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      TOKEN: ${TOKEN}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    env_file:
      - .env
    volumes:
      - ./bot/logs:/bot/logs
      - db:/var/log/postgresql
  db:
    container_name: db_container
    image: db_image
    restart: always
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB:  ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c archive_mode=on
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c log_replication_commands=on
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_filename='postgresql.log'
    env_file:
      - .env
    volumes:
      - db:/var/log/postgresql
  db_repl:
    container_name: db_repl_container
    image: db_repl_image
    restart: always
    build:
      context: ./db_repl
      dockerfile: Dockerfile
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=${DB_HOST} --port=${DB_PORT} -U ${DB_REPL_USER}
      do
      echo 'Waiting for primary to connect...'
      sleep 1
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 700 /var/lib/postgresql/data
      su - postgres -c '/usr/lib/postgresql/16/bin/postgres -D /var/lib/postgresql/data'"
    env_file:
      - .env
    depends_on:
      - db
volumes:
  db: